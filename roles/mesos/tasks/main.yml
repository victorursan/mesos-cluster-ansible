---
# tasks file for mesos

# Common tasks for all Mesos nodes
- name: Add key for Mesosphere repository
  apt_key: url=http://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0xE56151BF state=present
  become: yes

- name: Determine Linux distribution distributor
  shell: lsb_release -is | tr '[:upper:]' '[:lower:]'
  register: release_distributor

- name: Determine Linux distribution codename
  command: lsb_release -cs
  register: release_codename

- name: Add Mesosphere repository to sources list
  copy:
    content: "deb http://repos.mesosphere.io/{{release_distributor.stdout}} {{release_codename.stdout}} main"
    dest: /etc/apt/sources.list.d/mesosphere.list
    mode: 0644
  become: yes

- name: Install add-apt-repostory
  become: yes
  apt: name=software-properties-common state=latest
  when: mesos_install_mode == "master"


# todo: this is not needed
# - name: Add Oracle Java Repository
#   become: yes
#   apt_repository: repo='ppa:webupd8team/java'
#   when: mesos_install_mode == "master"
#
# - name: Accept Java 8 License
#   become: yes
#   debconf: name='oracle-java8-installer' question='shared/accepted-oracle-license-v1-1' value='true' vtype='select'
#   when: mesos_install_mode == "master"
#
# - name: Install Oracle Java 8
#   become: yes
#   apt: name={{item}} state=latest
#   with_items:
#     - oracle-java8-installer
#     - ca-certificates
#     - oracle-java8-set-default
#   when: mesos_install_mode == "master"
# sudo add-apt-repository ppa:webupd8team/java

# Tasks for Master, Slave, and ZooKeeper nodes
- name: Install mesos package
  apt: name=mesos state=present update_cache=true
  become: yes
  when: mesos_install_mode == "master" or mesos_install_mode == "slave"

- name: Set ZooKeeper URL # used for leader election amongst masters
  copy:
    content: "{{zookeeper_url}}"
    dest: /etc/mesos/zk
    mode: 0644
  become: yes
  when: mesos_install_mode == "master" or mesos_install_mode == "slave"


- name: Set ZK
  lineinfile: dest=/etc/environment state=present regexp='^ZK' line='ZK={{zookeeper_url}}'
  become: yes
  when: mesos_install_mode == "master"

# Tasks for Master nodes
- name: Disable the Mesos Slave service
  copy:
    content: "manual"
    dest: /etc/init/mesos-slave.override
    mode: 0644
  become: yes
  when: mesos_install_mode == "master"

- name: Set Mesos Master hostname
  copy:
    content: "{{ ansible_host }}"
    dest: /etc/mesos-master/hostname
    mode: 0644
  become: yes
  when: mesos_install_mode == "master"

- name: Set Mesos Master ip
  copy:
    content: "{{ ansible_host }}"
    dest: /etc/mesos-master/ip
    mode: 0644
  become: yes
  when: mesos_install_mode == "master"

- name: Set Mesos Master Cluster name
  copy:
    content: "{{ mesos_cluster_name }}"
    dest: /etc/mesos-master/cluster
    mode: 0644
  become: yes
  when: mesos_install_mode == "master"

- name: Set Mesos Master quorum count
  copy:
    content: "{{ mesos_quorum_count }}"
    dest: /etc/mesos-master/quorum
    mode: 0644
  become: yes
  when: mesos_install_mode == "master"

# Tasks for Slave nodes
- name: Disable the Mesos Master service
  copy:
    content: "manual"
    dest: /etc/init/mesos-master.override
    mode: 0644
  become: yes
  when: mesos_install_mode == "slave"

- name: Disable the ZooKeeper service
  copy:
    content: "manual"
    dest: /etc/init/zookeeper.override
    mode: 0644
  become: yes
  notify:
    - Stop zookeeper
  when: mesos_install_mode == "slave"

- name: Set Mesos Slave hostname
  copy:
    content: "{{ ansible_host }}"
    dest: /etc/mesos-slave/hostname
    mode: 0644
  become: yes
  when: mesos_install_mode == "slave"

- name: Set Mesos Slave ip
  copy:
    content: "{{ ansible_host }} "
    dest: /etc/mesos-slave/ip
    mode: 0644
  become: yes
  when: mesos_install_mode == "slave"

# Setup python
- name: Install dependencies
  apt: name={{ item }} update_cache=yes
  with_items:
      - python-dev
      - python-setuptools
  become: yes
  when: mesos_install_mode == "slave" or mesos_install_mode == "master"

- name: Install pip
  easy_install:
      name: pip
  become: yes
  when: mesos_install_mode == "slave" or mesos_install_mode == "master"

# Setup Docker
- name: Install docker-py
  pip:
      name: docker-py
      state: present
      version: 1.8.0
  become: yes
  when: mesos_install_mode == "slave" or mesos_install_mode == "master"

- name: Add docker apt repo
  apt_repository: repo='deb https://apt.dockerproject.org/repo ubuntu-trusty main' state=present
  become: yes
  when: mesos_install_mode == "slave" or mesos_install_mode == "master"

- name: Import the Docker repository key
  shell: apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
  become: yes
  when: mesos_install_mode == "slave" or mesos_install_mode == "master"

- name: Install Docker package
  apt: name=docker-engine update_cache=yes
  become: yes
  when: mesos_install_mode == "slave" or mesos_install_mode == "master"

- name: Set config file for docker (to run on TCP too)
  copy:
    content: |
      # Docker Upstart and SysVinit configuration file
      #
      # THIS FILE DOES NOT APPLY TO SYSTEMD
      #
      #   Please see the documentation for "systemd drop-ins":
      #   https://docs.docker.com/engine/admin/systemd/
      #

      # Customize location of Docker binary (especially for development testing).
      #DOCKERD="/usr/local/bin/dockerd"

      # Use DOCKER_OPTS to modify the daemon startup options.
      DOCKER_OPTS="-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock"

      # If you need Docker to use an HTTP proxy, it can also be specified here.
      #export http_proxy="http://127.0.0.1:3128/"

      # This is also a handy place to tweak where Docker's temporary files go.
      export DOCKER_TMPDIR="/mnt/bigdrive/docker-tmp"
    dest: "/etc/default/docker"
    mode: 0644
  become: yes
  when: mesos_install_mode == "slave"

- name: Restart Docker
  service:
    name: docker
    state: restarted
  become: yes
  when: mesos_install_mode == "slave"

# - name: Stop Docker deamon on slave
#   service:
#       name: docker
#       state: stopped
#   become: yes
#   when: mesos_install_mode == "slave"
#
# - name: Start Docker deamon on slave
#   shell: 'dockerd -D -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock --oom-score-adjust -999 &'
#   become: yes
#   when: mesos_install_mode == "slave"

- name: Set Mesos Slave containers
  copy:
    content: "{{ containerizers }} "
    dest: /etc/mesos-slave/containerizers
    mode: 0644
  become: yes
  when: mesos_install_mode == "slave"

- name: Set Mesos Slave executor registration timeout
  copy:
    content: "{{ executor_registration_timeout }} "
    dest: /etc/mesos-slave/executor_registration_timeout
    mode: 0644
  become: yes
  when: mesos_install_mode == "slave"

- name: Set Mesos Slave isolation
  copy:
    content: "cgroups/cpu,cgroups/mem"
    dest: /etc/mesos-slave/isolation
    mode: 0644
  become: yes
  when: mesos_install_mode == "slave"

- name: Set Mesos Slave resources
  shell: 'echo "[
    {
      \"name\": \"cpus\",
      \"type\": \"SCALAR\",
      \"scalar\": {
        \"value\": `nproc`
      }
    },
    {
      \"name\": \"mem\",
      \"type\": \"SCALAR\",
      \"scalar\": {
        \"value\": `vmstat -s -S ''M'' | awk ''NR==1{print $1}''`
      }
    }
  ]" > /etc/mesos-slave/resources'
  become: yes
  notify:
    - Start mesos-slave
  when: mesos_install_mode == "slave"

# Tasks for ZooKeeper nodes only
- name: Create zookeeper config file
  template: src=zoo.cfg.j2 dest=/etc/zookeeper/conf/zoo.cfg
  become: yes
  when: mesos_install_mode == "master"

- name: Create zookeeper myid file
  template: src=zoo_id.j2 dest=/etc/zookeeper/conf/myid
  become: yes
  notify:
    - Restart zookeeper
    - Start mesos-master
  when: mesos_install_mode == "master"

- name: Start Consul main server container
  docker_container:
    name: "node{{ ansible_host }}"
    image: consul
    state: started
    network_mode: host
    command: [
    "agent",
    "-server",
    "-client=0.0.0.0",
    "-node=node{{ ansible_host }}",
    "-bootstrap-expect=1",
    "-bind={{ ansible_host }}",
    "-data-dir=/tmp/consul",
    "-ui"
    ]
  become: yes
  when: mesos_install_mode == "consul_main_master"

- name: Start Consul server container
  docker_container:
    name: "node{{ ansible_host }}"
    image: consul
    state: started
    network_mode: host
    command: [
    "agent",
    "-server",
    "-client=0.0.0.0",
    "-node=node{{ ansible_host }}",
    "-bootstrap-expect=2",
    "-bind={{ ansible_host }}",
    "-data-dir=/tmp/consul",
    "-join={{ consul_main }}",
    "-ui"
    ]
  become: yes
  when: mesos_install_mode == "consul_master"

- name: Start Consul agent container
  docker_container:
    name: "node{{ ansible_host }}"
    image: consul
    state: started
    network_mode: host
    command: [
    "agent",
    "-client={{ ansible_host }}",
    "-bind={{ ansible_host }}",
    "-node=node{{ ansible_host }}",
    "-data-dir=/tmp/consul",
    "-join={{ consul_main }}"
    ]
  become: yes
  when: mesos_install_mode == "consul_slave"
